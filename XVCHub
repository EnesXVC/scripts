local Luna = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nebula-Softworks/Luna-Interface-Suite/refs/heads/main/source.lua", true))()

local Window = Luna:CreateWindow({
	Name = "XVC Hub",
	Subtitle = nil,
	LogoID = "82795327169782",
	LoadingEnabled = true,
	LoadingTitle = "XVC Hub Project",
	LoadingSubtitle = "by IEnes",

	ConfigSettings = {
		RootFolder = nil,
		ConfigFolder = "Big Hub"
	},

	KeySystem = false,
	KeySettings = {
		Title = "Luna Example Key",
		Subtitle = "Key System",
		Note = "Best Key System Ever! Also, Please Use A HWID Keysystem like Pelican, Luarmor etc. that provide key strings based on your HWID since putting a simple string is very easy to bypass",
		SaveInRoot = false,
		SaveKey = true,
		Key = {"Example Key"},
		SecondAction = {
			Enabled = true,
			Type = "Link",
			Parameter = ""
		}
	}
})

local lagserverTab = Window:CreateTab({
	Name = "Lag Server",
	Icon = "signal_cellular_alt",
	ImageSource = "Material",
	ShowTitle = true
})

local humansTab = Window:CreateTab({
	Name = "Humans",
	Icon = "accessibility",
	ImageSource = "Material",
	ShowTitle = true
})

local infectedTab = Window:CreateTab({
	Name = "Infected",
	Icon = "sentiment_very_dissatisfied",
	ImageSource = "Material",
	ShowTitle = true
})

local miscTab = Window:CreateTab({
	Name = "Misc",
	Icon = "dashboard",
	ImageSource = "Material",
	ShowTitle = true
})

---------Locals

local redWallIgnored = false
local lagEnabled = false
local lagAmount = 1
local lagLoopLimit = 100
local puddleTransparency = 0.9
local isPuddlesIgnored = false

---------Scripts



-----------------------Lag Server



lagserverTab:CreateSection("Lag-Server-Normal")

lagserverTab:CreateInput({
	Name = "Lag Server",
	Description = nil,
	PlaceholderText = "Enter A Number",
	CurrentValue = "",
	Numeric = true,
	MaxCharacters = nil,
	Enter = false,
	Callback = function(Text)
		local num = tonumber(Text)
		if num then
			lagLoopLimit = num
		end
	end
}, "LagInput")

lagserverTab:CreateToggle({
	Name = "Enable Lag",
	Description = nil,
	CurrentValue = false,
	Callback = function(Value)
		lagEnabled = Value
	end
}, "LagToggle")

task.spawn(function()
	local loop = 0
	while true do
		task.wait()
		if lagEnabled then
			loop += 1
			if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name == "Radio" then
				game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):Activate()
			end

			if loop >= lagLoopLimit then
				task.wait()
				loop = 0
			end
		end
	end
end)

lagserverTab:CreateSection("Lag-Server-High")

lagserverTab:CreateInput({
	Name = "Lag Server",
	Description = nil,
	PlaceholderText = "Enter A Number",
	CurrentValue = "",
	Numeric = true,
	MaxCharacters = 5,
	Enter = false,
	Callback = function(Text)
		local num = tonumber(Text)
		if num then
			lagAmount = num
		end
	end
}, "LagInput")

lagserverTab:CreateToggle({
	Name = "Enable Lag",
	Description = "Lag on/off",
	CurrentValue = false,
	Callback = function(Value)
		lagEnabled = Value
	end
}, "LagToggle")

task.spawn(function()
	while true do
		task.wait()
		if lagEnabled then
			local tool = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
			if tool and tool.Name == "Radio" then
				for i = 1, lagAmount do
					tool:Activate()
				end
			end
		end
	end
end)

lagserverTab:CreateSection("Others")

lagserverTab:CreateButton({
	Name = "Lag The Server Small (not toggle)",
	Description = nil,
	Callback = function()
		game.Chat.BubbleChatEnabled = false
game.Players.LocalPlayer.PlayerGui.BubbleChat:Destroy()

local loop = 0
while true do 
loop +=1

if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name == "Radio" then
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):Activate()
end

 if loop >= 10 then
task.wait()
loop = 0
  end
 end
  	end    
})

lagserverTab:CreateButton({
	Name = "Lag The Server Normal (not toggle)",
	Description = nil,
	Callback = function()
		game.Chat.BubbleChatEnabled = false
game.Players.LocalPlayer.PlayerGui.BubbleChat:Destroy()

local loop = 0
while true do 
loop +=1

if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name == "Radio" then
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):Activate()
end

 if loop >= 100 then
task.wait()
loop = 0
  end
 end
  	end    
})

lagserverTab:CreateButton({
	Name = "Lag The Server High (not toggle)",
	Description = nil,
	Callback = function()
		game.Chat.BubbleChatEnabled = false
game.Players.LocalPlayer.PlayerGui.BubbleChat:Destroy()

local loop = 0
while true do 
loop +=1

if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name == "Radio" then
  game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):Activate()
end

 if loop >= 1000 then
task.wait()
loop = 0
  end
 end
  	end    
})



-----------------------humans



humansTab:CreateToggle({
    Name = "Auto Collect Cash",
    Description = nil,
    CurrentValue = false,
    Callback = function(Value)
        _G.AutoCollectMoney = Value
        while _G.AutoCollectMoney and task.wait(1) do
            if game:GetService("Players").LocalPlayer.Team == game:GetService("Teams"):FindFirstChild("Infected") then 
                return 
            end
            
            for _, x in next, workspace:GetDescendants() do
                if x:IsA("BasePart") and x.Name:lower() == "moneystack" then
                    firetouchinterest(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart, x, 0)
                end
            end
        end
    end
}, "AutoCollectCash")


humansTab:CreateSection("Anti-Puddle")

humansTab:CreateInput({
    Name = "Puddle Transparency",
    Description = "",
    PlaceholderText = tostring(puddleTransparency),
    CurrentValue = tostring(puddleTransparency),
    Numeric = true,
    MaxCharacters = 4,
    Enter = false,
    Callback = function(Text)
        local num = tonumber(Text)
        if num and num >= 0 and num <= 1 then
            puddleTransparency = num
            if isPuddlesIgnored then
                updatePuddles()
            end
        else
            warn("error.")
        end
    end
}, "PuddleTransparencyInput")

function updatePuddles()
    for _, z in next, workspace:GetDescendants() do
        if z:IsA("BasePart") and z:FindFirstChild("TouchInterest") and z.Parent.Name == "Model" then
            z.Transparency = isPuddlesIgnored and puddleTransparency or 0
            z.CanCollide = not isPuddlesIgnored
            z.CanTouch = not isPuddlesIgnored
            z.CanQuery = not isPuddlesIgnored
        end
    end
end

humansTab:CreateToggle({
    Name = "Ignore Infection Puddles",
    Description = "",
    CurrentValue = isPuddlesIgnored,
    Callback = function(Value)
        isPuddlesIgnored = Value
        updatePuddles()
    end
}, "IgnorePuddlesToggle")



-----------------------Ä°nfected



infectedTab:CreateToggle({
    Name = "Ignore Red Wall",
    Description = "Allows infected to pass through the red barrier",
    CurrentValue = false,
    Callback = function(Value)
        redWallIgnored = Value
        
        if game.Players.LocalPlayer.Team ~= game:GetService("Teams"):FindFirstChild("Infected") then
            warn("You must be infected to use this feature")
            return
        end
        
        for _, part in ipairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") and part.Name == "Part" and part:FindFirstChild("TouchInterest") and part.Transparency > 0.4 then
                part.CanTouch = not Value
                part.CanQuery = not Value
            end
        end
        
        print("Red wall " .. (Value and "ignored" or "enabled"))
    end
})

miscTab:CreateParagraph({
	Title = "Codes:",
	Text = "22000LIKES\nLIKE\ngift"
})

miscTab:CreateButton({
	Name = "Infinite Yield",
	Description = nil,
	Callback = function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
  	end    
})

miscTab:CreateButton({
	Name = "Dex",
	Description = nil,
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
  	end    
})
